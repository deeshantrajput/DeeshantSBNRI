// Generated by Dagger (https://google.github.io/dagger).
package com.deeshant.deeshantsbnri.ui.dummies;

import com.deeshant.deeshantsbnri.data.local.db.DatabaseService;
import com.deeshant.deeshantsbnri.utils.network.NetworkHelper;
import com.deeshant.deeshantsbnri.utils.rx.SchedulerProvider;
import dagger.internal.Factory;
import io.reactivex.disposables.CompositeDisposable;
import javax.inject.Provider;

public final class DummyItemViewModel_Factory implements Factory<DummyItemViewModel> {
  private final Provider<SchedulerProvider> schedulerProvider;

  private final Provider<CompositeDisposable> compositeDisposableProvider;

  private final Provider<NetworkHelper> networkHelperProvider;

  private final Provider<DatabaseService> databaseServiceProvider;

  public DummyItemViewModel_Factory(
      Provider<SchedulerProvider> schedulerProvider,
      Provider<CompositeDisposable> compositeDisposableProvider,
      Provider<NetworkHelper> networkHelperProvider,
      Provider<DatabaseService> databaseServiceProvider) {
    this.schedulerProvider = schedulerProvider;
    this.compositeDisposableProvider = compositeDisposableProvider;
    this.networkHelperProvider = networkHelperProvider;
    this.databaseServiceProvider = databaseServiceProvider;
  }

  @Override
  public DummyItemViewModel get() {
    return new DummyItemViewModel(
        schedulerProvider.get(),
        compositeDisposableProvider.get(),
        networkHelperProvider.get(),
        databaseServiceProvider.get());
  }

  public static DummyItemViewModel_Factory create(
      Provider<SchedulerProvider> schedulerProvider,
      Provider<CompositeDisposable> compositeDisposableProvider,
      Provider<NetworkHelper> networkHelperProvider,
      Provider<DatabaseService> databaseServiceProvider) {
    return new DummyItemViewModel_Factory(
        schedulerProvider,
        compositeDisposableProvider,
        networkHelperProvider,
        databaseServiceProvider);
  }

  public static DummyItemViewModel newDummyItemViewModel(
      SchedulerProvider schedulerProvider,
      CompositeDisposable compositeDisposable,
      NetworkHelper networkHelper,
      DatabaseService databaseService) {
    return new DummyItemViewModel(
        schedulerProvider, compositeDisposable, networkHelper, databaseService);
  }
}
