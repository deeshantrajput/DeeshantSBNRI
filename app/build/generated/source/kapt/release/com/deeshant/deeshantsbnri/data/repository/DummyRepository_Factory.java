// Generated by Dagger (https://google.github.io/dagger).
package com.deeshant.deeshantsbnri.data.repository;

import com.deeshant.deeshantsbnri.data.local.db.DatabaseService;
import com.deeshant.deeshantsbnri.data.remote.NetworkService;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DummyRepository_Factory implements Factory<DummyRepository> {
  private final Provider<NetworkService> networkServiceProvider;

  private final Provider<DatabaseService> databaseServiceProvider;

  public DummyRepository_Factory(
      Provider<NetworkService> networkServiceProvider,
      Provider<DatabaseService> databaseServiceProvider) {
    this.networkServiceProvider = networkServiceProvider;
    this.databaseServiceProvider = databaseServiceProvider;
  }

  @Override
  public DummyRepository get() {
    return new DummyRepository(networkServiceProvider.get(), databaseServiceProvider.get());
  }

  public static DummyRepository_Factory create(
      Provider<NetworkService> networkServiceProvider,
      Provider<DatabaseService> databaseServiceProvider) {
    return new DummyRepository_Factory(networkServiceProvider, databaseServiceProvider);
  }

  public static DummyRepository newDummyRepository(
      NetworkService networkService, DatabaseService databaseService) {
    return new DummyRepository(networkService, databaseService);
  }
}
