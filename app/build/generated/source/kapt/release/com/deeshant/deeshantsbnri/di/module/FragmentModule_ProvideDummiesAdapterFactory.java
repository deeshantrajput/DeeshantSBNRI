// Generated by Dagger (https://google.github.io/dagger).
package com.deeshant.deeshantsbnri.di.module;

import com.deeshant.deeshantsbnri.ui.dummies.DummiesAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class FragmentModule_ProvideDummiesAdapterFactory implements Factory<DummiesAdapter> {
  private final FragmentModule module;

  public FragmentModule_ProvideDummiesAdapterFactory(FragmentModule module) {
    this.module = module;
  }

  @Override
  public DummiesAdapter get() {
    return proxyProvideDummiesAdapter(module);
  }

  public static FragmentModule_ProvideDummiesAdapterFactory create(FragmentModule module) {
    return new FragmentModule_ProvideDummiesAdapterFactory(module);
  }

  public static DummiesAdapter proxyProvideDummiesAdapter(FragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideDummiesAdapter(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
